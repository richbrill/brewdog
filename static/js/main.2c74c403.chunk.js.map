{"version":3,"sources":["containers/Beers/reducer.js","reducers.js","containers/Basket/reducer.js","containers/Beers/actions.js","containers/Beers/saga.js","store.js","components/BeerItem/index.js","containers/Beers/index.js","containers/Beers/selectors.js","containers/Basket/selectors.js","containers/Basket/actions.js","containers/Basket/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","error","all","pizza","steak","beers","state","type","payload","additionalState","food","combineReducers","basket","beer","index","findIndex","item","id","newBasket","quantity","push","newQuantity","splice","Math","max","loadBeers","loadBeersSuccess","fetchBeers","beersSaga","request","url","options","fetch","then","response","json","call","put","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","BeerItem","onSubmit","Portal","usePortal","useState","visible","setVisible","closeModal","className","onClick","src","image_url","alt","name","tagline","abv","description","substring","food_pairing","map","text","key","beerState","selectAllBeers","createSelector","selectPizzaBeers","selectSteakBeers","selectLoading","selectError","selectBasketItems","selectTotalAbv","reduce","acc","current","parseFloat","toFixed","addItem","Basket","useSelector","total","dispatch","useDispatch","open","setOpen","removeItem","removeAllOfType","App","drawerOpen","setDrawerOpen","childIndex","setChildIndex","allBeers","pizzaBeers","steakBeers","useEffect","forceRenderTabPanel","defaultIndex","selectedIndex","onSelect","onChangeIndex","Beers","anchor","onClose","event","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2c74c403.chunk.js","sourcesContent":["// TODO think of a better shape for this data as it's indirectly tied to 'all', pizza', 'steak' as args from UI components\nconst initialState = {\n    loading: false,\n    error: false,\n    all: [],\n    pizza: [],\n    steak: []\n}\n\nconst beers = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'LOAD_BEERS':\n      return { ...state, loading: true, error: false };\n    case 'LOAD_BEERS_SUCCESS':\n      const additionalState = { [payload.food]: payload.beers };\n      return { ...state, ...additionalState, loading: false };\n    case 'LOAD_BEERS_ERROR':\n      return { ...state, loading: false, error: true };\n    default:\n      return state\n  }\n};\n\nexport default beers;","import { combineReducers } from 'redux';\nimport beers from './containers/Beers/reducer';\nimport basket from './containers/Basket/reducer';\n\nexport default combineReducers({\n  beers,\n  basket\n});","/* \nTODO decide if it's better to have a simpler state object such as:\n[\n  {\n    beerId: 1,\n    quantity: 2\n  }\n]\n\nbut the trade off would mean having to extract individual beers from \nthe main beers in the beers reducer to render details in the basket, question is, which is more performant vs memory usage?\n(negligible for this app in particular but still worth thinking about)\n*/\n\nexport default function basket(state = [], { type, payload }) {\n  switch (type) {\n    case 'ADD_ITEM':\n      if (payload.beer) {\n        const index = state.findIndex(item => item.id === payload.beer.id);\n        if (index >= 0) {\n          const newBasket = [...state];\n          newBasket[index].quantity += 1;\n          return newBasket;\n        } else {\n          const newBasket = [...state];\n          newBasket.push({ ...payload.beer, quantity: 1 });\n          return newBasket;\n        }\n      }\n      return state;\n    case 'REMOVE_ITEM':\n      if (payload.beer) {\n        const index = state.findIndex(item => item.id === payload.beer.id);\n        if (index >= 0) {\n          const newBasket = [...state];\n          const newQuantity = newBasket[index].quantity - 1;\n          if (newQuantity === 0) {\n            newBasket.splice(index, 1);\n          } else {\n            newBasket[index].quantity = Math.max(0, newBasket[index].quantity - 1);\n          }\n          return newBasket;\n        }\n      }\n      return state;\n    case 'REMOVE_ALL':\n      return [];\n    case 'REMOVE_ALL_OF_TYPE':\n      if (payload.beer) {\n        const index = state.findIndex(item => item.id === payload.beer.id);\n        if (index >= 0) {\n          const newBasket = [...state];\n          newBasket.splice(index, 1);\n          return newBasket;\n        }\n      }\n      return state;\n    default:\n      return state\n  }\n}","export const loadBeers = (food = 'all') => ({ type: 'LOAD_BEERS', payload: { food } });\nexport const loadBeersSuccess = (beers, food) => {\n    return ({ type: 'LOAD_BEERS_SUCCESS', payload: { beers, food } });\n}\nexport const loadBeersError = error => ({ type: 'LOAD_BEERS_ERROR', payload: { error } });\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadBeersSuccess, loadBeersError } from './actions';\n\n// TODO: add error handling for failed reponses\nconst request = (url, options) => \n  fetch(url, options)\n    .then((response) => response.json());\n\nfunction* fetchBeers({ payload }) {\n  try {\n    const beers = yield call(request, `https://api.punkapi.com/v2/beers?food=${payload.food}`);\n    yield put(loadBeersSuccess(beers, payload.food));\n  } catch (e) {\n    yield put(loadBeersError(e));\n  }\n}\n\nfunction* beersSaga() {\n  yield takeEvery('LOAD_BEERS', fetchBeers);\n}\n\nexport default beersSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers';\nimport beersSaga from './containers/Beers/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(beersSaga);\n\nexport default store;","import React, { Fragment, useState } from 'react';\nimport usePortal from 'react-useportal'\nimport './styles.css';\n\n//TODO consider using css-in-js if needs be\nconst BeerItem = ({ beer, onSubmit }) => {\n  const { Portal } = usePortal()\n  const [ visible, setVisible ] = useState(false);\n  \n  const openModal = () => setVisible(true);\n  const closeModal = () => setVisible(false);\n\n  const handleSubmit = () => {\n    onSubmit(beer);\n    closeModal();\n  }\n\n  return (\n    <div>\n      <div className=\"beer-item\">\n        <button type=\"button\" className=\"beer-item-btn\" onClick={openModal}>\n            <img src={beer.image_url} alt={beer.name} />\n        </button>\n      </div>\n      <span className=\"beer-item-name\">{beer.name}</span>\n      {visible && \n        <Portal>\n          <div className=\"modal-overlay\"></div>\n          <div className=\"modal\">\n            <button type=\"button\" onClick={closeModal} className=\"modal-close-btn\">CLOSE</button>\n            <div className=\"modal-body\">\n              <div className=\"modal-content\">\n                <div className=\"modal-blurb\">\n                  <h2>{beer.name}</h2>\n                  <ul>\n                    <li>{beer.tagline}</li>\n                    <li>abv: {beer.abv}%</li>\n                    <li>{`${beer.description.substring(0, 50)}...`}</li>\n                    <li>{`${beer.food_pairing.map(text => `${text.substring(0, 50)}, `)}...`}</li>\n                  </ul>\n                </div>\n                <div className=\"modal-img\">\n                  <img src={beer.image_url} alt={beer.name}/>\n                </div>\n              </div>\n              <div className=\"modal-submit\">\n                <button onClick={handleSubmit}>ADD TO CART</button>\n              </div>\n            </div>\n          </div>\n        </Portal>}\n    </div>\n  )\n}\n\nexport default BeerItem;","import React from 'react';\nimport BeerItem from './../../components/BeerItem';\nimport './styles.css';\n\nexport default ({ beers, onSubmit }) =>\n  <div className=\"beers-list\">{beers.map(beer =>\n    <BeerItem\n      beer={beer}\n      key={beer.id}\n      onSubmit={onSubmit}\n    />)}\n  </div>\n","import { createSelector } from 'reselect';\n\nconst beerState = state => state.beers;\n\nexport const selectAllBeers = createSelector(\n    beerState,\n    beers => beers.all\n);\n\nexport const selectPizzaBeers = createSelector(\n    beerState,\n    beers => beers.pizza\n);\n\nexport const selectSteakBeers = createSelector(\n    beerState,\n    beers => beers.steak\n);\n\nexport const selectLoading = createSelector(\n    beerState,\n    state => state.loading\n);\n\nexport const selectError = createSelector(\n    beerState,\n    state => state.error\n);","import { createSelector } from 'reselect';\n\nconst basket = state => state.basket;\n\nexport const selectBasketItems = createSelector(\n    basket,\n    beers => beers\n);\n\n// Obviously this would be price according to UI/UX 😄\nexport const selectTotalAbv = createSelector(\n    basket,\n    beers => beers.reduce((acc, current) => acc + parseFloat(current.abv || 0), 0).toFixed(2)\n);\n","export const addItem = beer => ({ type: 'ADD_ITEM', payload: { beer } });\nexport const removeItem = beer => ({ type: 'REMOVE_ITEM', payload: { beer } });\nexport const removeAll = () => ({ type: 'REMOVE_ALL' });\nexport const removeAllOfType = beer => ({ type: 'REMOVE_ALL_OF_TYPE', payload: { beer } });\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './styles.css';\nimport { AiOutlineLine } from \"react-icons/ai\";\nimport { RiShoppingBasket2Line } from 'react-icons/ri';\nimport { BsTrash } from 'react-icons/bs';\nimport { selectBasketItems, selectTotalAbv } from './selectors';\nimport { addItem, removeItem, removeAllOfType } from './actions';\n\nconst Basket = () => {\n  const beers = useSelector(selectBasketItems);\n  const total = useSelector(selectTotalAbv);\n  const dispatch = useDispatch();\n  const [ open, setOpen ] = useState(false);\n  const toggleBasket = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={`basket ${open ? 'open' : ''}`}>\n      <button className=\"centered grip\" onClick={toggleBasket}><AiOutlineLine /></button>\n      <span className=\"centered basket-title\"><RiShoppingBasket2Line />Shopping Cart</span>\n      <ul>\n        {beers.map(beer =>\n          <li>\n            <div className=\"img-wrap\">\n              <span className=\"price\">{beer.abv}</span>\n              <img src={beer.image_url} alt={beer.name}/>\n            </div>\n            <div className=\"info-wrap\">\n              <h3>{beer.name}</h3>\n              <span>additional info</span>\n            </div>\n            <div className=\"count-wrap\">\n              <button type=\"button\" className=\"dec\" onClick={() => dispatch(removeItem(beer))} >-</button>\n              <span>{beer.quantity}</span>\n              <button type=\"button\" className=\"inc\" onClick={() => dispatch(addItem(beer))} >+</button>\n            </div>\n            <button type=\"button\" className=\"bin\" onClick={() => dispatch(removeAllOfType(beer))} ><BsTrash /></button>\n          </li>\n        )}\n      </ul>\n      <div className=\"total\"><span>Total:</span><span>{total}</span></div>\n    </div>\n  )\n}\n\nexport default Basket;","import React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadBeers } from './containers/Beers/actions';\nimport './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport SwipeableViews from 'react-swipeable-views';\nimport { FaMugHot, FaRegCircle, FaSearch } from \"react-icons/fa\";\nimport { GiKnifeFork } from \"react-icons/gi\";\nimport Beers from './containers/Beers';\nimport { selectAllBeers, selectPizzaBeers, selectSteakBeers, selectLoading, selectError } from './containers/Beers/selectors';\nimport Basket from './containers/Basket';\nimport { addItem } from './containers/Basket/actions';\n\n// TODO make it DRYer (if possible)\nconst App = () => {\n  const [ drawerOpen, setDrawerOpen ] = useState(false);\n  const [ childIndex, setChildIndex ] = useState(0);\n  const allBeers = useSelector(selectAllBeers);\n  const pizzaBeers = useSelector(selectPizzaBeers);\n  const steakBeers = useSelector(selectSteakBeers);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // TODO refactor these dispatches into each of the tab views (so they lazy load independently) ideally if they lived in separate components\n    dispatch(loadBeers());\n    dispatch(loadBeers('pizza'));\n    dispatch(loadBeers('steak'));\n  }, []);\n\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  const handleChange = (index) => {\n    setChildIndex(index);\n  };\n\n  const handleChangeChildIndex = index => {\n    setChildIndex(index);\n  };\n\n  return (\n    <Fragment>\n      <h1>Brewdog app</h1>\n      <Tabs forceRenderTabPanel defaultIndex={0}>\n        <TabList className=\"main-tabs\">\n          <Tab><FaMugHot /></Tab>\n          <Tab><GiKnifeFork /></Tab>\n          <Tab><FaRegCircle /></Tab>\n          <Tab><FaSearch /></Tab>\n        </TabList>\n        <TabPanel>\n          <Tabs forceRenderTabPanel selectedIndex={childIndex} onSelect={handleChange}>\n            <TabList className=\"child-tabs\">\n              <Tab>ALL</Tab>\n              <Tab>PIZZA</Tab>\n              <Tab>STEAK</Tab>\n            </TabList>\n            <SwipeableViews index={childIndex} onChangeIndex={handleChangeChildIndex}>\n              <TabPanel className=\"overflow\">\n                <Beers beers={allBeers} onSubmit={beer => dispatch(addItem(beer))} />\n              </TabPanel>\n              <TabPanel className=\"overflow\">\n                <Beers beers={pizzaBeers} onSubmit={beer => dispatch(addItem(beer))} />\n              </TabPanel>\n              <TabPanel className=\"overflow\">\n                <Beers beers={steakBeers} onSubmit={beer => dispatch(addItem(beer))} />\n              </TabPanel>\n            </SwipeableViews>\n          </Tabs>\n        </TabPanel>\n        <TabPanel>\n          <Tabs forceRenderTabPanel>\n            <TabList className=\"child-tabs\">\n              <Tab>Extras</Tab>\n            </TabList>\n            <SwipeableViews>\n              <TabPanel>\n                Extras\n              </TabPanel>\n            </SwipeableViews>\n          </Tabs>\n        </TabPanel>\n        <TabPanel>\n          <Tabs forceRenderTabPanel>\n            <TabList className=\"child-tabs\">\n              <Tab>Stuff</Tab>\n            </TabList>\n            <SwipeableViews>\n              <TabPanel>\n                Stuff\n              </TabPanel>\n            </SwipeableViews>\n          </Tabs>\n        </TabPanel>\n        <TabPanel>\n          <Tabs forceRenderTabPanel>\n            <TabList className=\"child-tabs\">\n              <Tab>Search</Tab>\n            </TabList>\n            <SwipeableViews>\n              <TabPanel>\n                Search\n              </TabPanel>\n            </SwipeableViews>\n          </Tabs>\n        </TabPanel>\n      </Tabs>\n      <Basket anchor=\"bottom\" open={drawerOpen} onClose={toggleDrawer(false)} >\n          Drawer stuff bla bla<br />\n          nmorefgwhgferui\n      </Basket>\n    </Fragment>\n  )\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}